name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build & Test
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Test with the dotnet CLI
        run: dotnet test --configuration Release --logger trx --collect:"XPlat Code Coverage"
      - name: Combine Coverage Reports
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.11
        with:
          reports: "**/*.cobertura.xml"
          targetdir: "${{ github.workspace }}"
          reporttypes: "Cobertura"
          verbosity: "Info"
          title: "Code Coverage"
          tag: "${{ github.run_number }}_${{ github.run_id }}"
          toolpath: "reportgeneratortool"
      - name: Upload Combined Coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ${{ github.workspace }}/Cobertura.xml
          retention-days: 5
      
      - name: Publish Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "Cobertura.xml"
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "10 30"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.16.1
        if: always()
        with:
          trx_files: "${{ github.workspace }}/**/*.trx"
        
      - name: Login to Docker Hub
        env:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username $username --password-stdin
      - name: Build Docker image
        run: docker build Distal.Core --file Distal.Core/Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/distal.core:${{ github.ref_name }}
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/distal.core:${{ github.ref_name }}
