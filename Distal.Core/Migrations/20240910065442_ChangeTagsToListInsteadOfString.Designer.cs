// <auto-generated />
using System;
using Distal.Core.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Distal.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240910065442_ChangeTagsToListInsteadOfString")]
    partial class ChangeTagsToListInsteadOfString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Distal.Core.Models.MeshData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<Guid>("MeshFileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MeshFileId")
                        .IsUnique();

                    b.ToTable("MeshData");
                });

            modelBuilder.Entity("Distal.Core.Models.MeshFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Format")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MeshFiles");
                });

            modelBuilder.Entity("Distal.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFederatedUser")
                        .HasColumnType("boolean");

                    b.Property<int>("UploadLimit")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Distal.Core.Models.MeshData", b =>
                {
                    b.HasOne("Distal.Core.Models.MeshFile", "MeshFile")
                        .WithOne("MeshData")
                        .HasForeignKey("Distal.Core.Models.MeshData", "MeshFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeshFile");
                });

            modelBuilder.Entity("Distal.Core.Models.MeshFile", b =>
                {
                    b.HasOne("Distal.Core.Models.User", "User")
                        .WithMany("MeshFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Distal.Core.Models.MeshFile", b =>
                {
                    b.Navigation("MeshData");
                });

            modelBuilder.Entity("Distal.Core.Models.User", b =>
                {
                    b.Navigation("MeshFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
